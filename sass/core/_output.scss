/******************************/
/* OUTPUT: SETTINGS VARIABLES */
/******************************/

@use 'sass:meta';
@use 'sass:map';

@use '../utils';
@use 'core';
@use 'normalize';
@use 'grid';
@use '../helpers';
@use '../modules';
@use '../components';

// Add core settings
$settings: map.merge(
	( 'grid': grid.$settings ),
	(
		'core': (
			'canHoverClass': core.$can-hover-class,
			'canTouchClass': core.$can-touch-class
		)
	)
);

// Output default features and settings
@if core.$generate-features or grid.$generate-settings {
	:root {
		--rr-version: #{meta.inspect(core.$version)};

		@if core.$generate-features {
			--rr-can-hover: false;
			--rr-can-touch: false;
		}

		@if grid.$generate-settings and not utils.is-empty(grid.$generate-settings) {
			--rr-settings: #{meta.inspect(utils.json-encode($settings))};
		}
	}
}

// Output breakpoint settings
@if grid.$generate-settings {
	@each $breakpoint-name, $breakpoint-entry in grid.$breakpoints {
		@include grid.mq($breakpoint-name) {
			:root {
				--rr-current-breakpoint: '#{$breakpoint-name}';
				--rr-current-columns: '#{grid.breakpoint-property($breakpoint-name, 'columns')}';
			}
		}
	}
}

// Output features
@if core.$generate-features {
	@include grid.mq-hover() {
		:root {
			--rr-can-hover: true;
		}
	}

	@include grid.mq-touch() {
		:root {
			--rr-can-touch: true;
		}
	}
}

/*********************/
/* OUTPUT: NORMALIZE */
/*********************/

@include normalize.normalize-generate-output();

/***************************/
/* OUTPUT: DEFAULT CLASSES */
/***************************/

@each $breakpoint-name, $breakpoint in grid.$breakpoints {
	@include grid.mq($breakpoint-name) {
		// Get breakpoint prefix
		$breakpoint-prefix: grid.breakpoint-prefix($breakpoint-name);
		$breakpoint-prefix-full: grid.breakpoint-prefix($breakpoint-name, false);

		// Grid
		@include grid.grid-generate-output($breakpoint-prefix-full, $breakpoint-prefix, $breakpoint-name);

		// Helpers
		@include helpers.background-generate-output($breakpoint-prefix, $breakpoint-name);
		@include helpers.display-generate-output($breakpoint-prefix, $breakpoint-name);
		@include helpers.flex-generate-output($breakpoint-prefix, $breakpoint-name);
		@include helpers.misc-generate-output($breakpoint-prefix, $breakpoint-name);
		@include helpers.overflow-generate-output($breakpoint-prefix, $breakpoint-name);
		@include helpers.position-generate-output($breakpoint-prefix, $breakpoint-name);
		@include helpers.typo-generate-output($breakpoint-prefix, $breakpoint-name);
		@include helpers.visibility-generate-output($breakpoint-prefix, $breakpoint-name);

		// Modules
		@include modules.aspect-ratio-generate-output($breakpoint-prefix, $breakpoint-name);
		@include modules.custom-generate-output($breakpoint-prefix, $breakpoint-name);
		@include modules.color-generate-output($breakpoint-prefix, $breakpoint-name);
		@include modules.font-family-generate-output($breakpoint-prefix, $breakpoint-name);
		@include modules.font-size-generate-output($breakpoint-prefix, $breakpoint-name);
		@include modules.spacing-generate-output($breakpoint-prefix, $breakpoint-name);
		@include modules.transition-generate-output($breakpoint-prefix, $breakpoint-name);

		// Components
		@include components.table-generate-output($breakpoint-prefix, $breakpoint-name);
	}
}

/*********************************/
/* OUTPUT: BREAKPOINT OVERWRITES */
/*********************************/

@each $breakpoint-name, $breakpoint in grid.$breakpoints {
	@include grid.mq($breakpoint-name) {
		// Get breakpoint prefix
		$breakpoint-prefix: grid.breakpoint-prefix($breakpoint-name);

		// Modules
		@include modules.aspect-ratio-generate-output($breakpoint-prefix, $breakpoint-name, true);
		@include modules.color-generate-output($breakpoint-prefix, $breakpoint-name, true);
		@include modules.font-family-generate-output($breakpoint-prefix, $breakpoint-name, true);
		@include modules.font-size-generate-output($breakpoint-prefix, $breakpoint-name, true);
		@include modules.spacing-generate-output($breakpoint-prefix, $breakpoint-name, true);
	}
}

/***********************/
/* OUTPUT: GRID HELPER */
/***********************/

@include grid.grid-generate-helper-output();
