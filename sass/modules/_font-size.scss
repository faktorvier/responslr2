///////////////////
// DEFAULT SETTINGS
///////////////////

// Classes
$rr-font-size-class-prefix: 'txt-size-' !default;

// Default values
$rr-font-size-default-line-height: unset !default;
$rr-font-size-default-letter-spacing: unset !default;

// Default entries
$rr-font-sizes: () !default;

// Default entry
$rr-font-sizes-default: map-default($rr-font-sizes) !default;

// Output handling
$rr-generate-font-sizes: $rr-generate-classes !default;
$rr-generate-font-sizes-unset: $rr-generate-font-sizes !default;

///////////////////
// CLASS PROPERTIES
///////////////////

$rr-font-size-unset-class-properties: (
	font-size: unset,
	line-height: unset
) !default;

////////////
// FUNCTIONS
////////////

// Check if a font size exists
@function font-size-exists($name) {
	@return entry-exists($rr-font-sizes, $name);
}

// Gets a font size by name
@function font-size-entry($name: null) {
	@return get-entry-by-name($rr-font-sizes, $name, $rr-font-sizes-default);
}

// Get css properties by entry
@function font-size-entry-to-properties($entry, $breakpoint-name: '') {
	$value: get-value-by-entry($entry, 'size', $breakpoint-name);
	$properties: ();

	@if $value == $rr-global-unset-class {
		$properties: $rr-font-size-unset-class-properties;
	} @else {
		$properties: (
			font-size: $value,
			line-height: get-property-by-entry($entry, 'line-height', $rr-font-size-default-line-height, $breakpoint-name),
			letter-spacing: get-property-by-entry($entry, 'letter-spacing', $rr-font-size-default-letter-spacing, $breakpoint-name)
		);
	}

	@return $properties;
}

/////////
// MIXINS
/////////

// Output font size by name
@mixin font-size($name: null, $breakpoint-name: '') {
	$entry: font-size-entry($name);

	@if is-not-null($entry) {
		$properties: font-size-entry-to-properties($entry, $breakpoint-name);
		@include generate-properties($properties);
	}
}

/////////
// OUTPUT
/////////

@mixin generate-font-size-module-output($breakpoint-prefix: '', $breakpoint-name: '') {
	@if $rr-generate-font-sizes {
		$rr-font-sizes-new: $rr-font-sizes;

		// Append unset
		@if $rr-generate-font-sizes-unset and $breakpoint-prefix != '' {
			@if $rr-generate-font-sizes-unset {
				$rr-font-sizes-new: map-append(
					$rr-font-sizes-new,
					unset,
					$rr-global-unset-class
				);
			}
		}

		@each $font-size-name, $font-size-entry in $rr-font-sizes-new {
			@include generate-output-by-class(
				$class: $font-size-name,
				$prefix: $rr-font-size-class-prefix,
				$breakpoint-prefix: $breakpoint-prefix,
				$properties: font-size-entry-to-properties($font-size-entry, $breakpoint-name),
				$breakpoint-overwrites: entry-has-breakpoint-overwrite($font-size-entry, $breakpoint-name)
			);
		}
	}
}
