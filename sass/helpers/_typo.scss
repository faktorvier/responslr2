///////////////////
// DEFAULT SETTINGS
///////////////////

@use '../utilities' as utils;
@use '../core';

// Classes
$fix-class: 'font-fix' !default;
$align-class-prefix: 'txt-' !default;
$transform-class-prefix: 'txt-transform-' !default;

// Default text-align properties
$align-properties: (
	left,
	right,
	center,
	justify,
	justify-all
) !default;

// Default text-transform properties
$transform-properties: (
	none,
	capitalize,
	uppercase,
	lowercase
) !default;

// Outout handling
$generate-fix: core.$generate-classes !default;
$generate-align: core.$generate-classes !default;
$generate-transform: core.$generate-classes !default;

///////////////////
// CLASS PROPERTIES
///////////////////

$reset-class-properties: (
	font-smooth: always,
	font-smoothing: antialiased,
	-webkit-font-smoothing: antialiased,
	-moz-font-smoothing: antialiased,
	-moz-osx-font-smoothing: grayscale
) !default;

/////////
// MIXINS
/////////

@mixin fix() {
	@include core.generate-properties($reset-class-properties);
}

/////////
// OUTPUT
/////////

@mixin generate-output($breakpoint-prefix: '', $breakpoint-name: '') {
	// Font fix
	@if $generate-fix and core.is-default($breakpoint-prefix) {
		.#{$fix-class} {
			@include core.generate-properties($reset-class-properties);
		}
	}

	// Text align
	@if $generate-align {
		@include core.generate-output-by-property(
			$property: 'text-align',
			$values: $align-properties,
			$prefix: $align-class-prefix,
			$breakpoint-prefix: $breakpoint-prefix,
			$generate-unset: true
		);
	}

	// Text transform
	@if $generate-transform {
		@include core.generate-output-by-property(
			$property: 'text-transform',
			$values: $transform-properties,
			$prefix: $transform-class-prefix,
			$breakpoint-prefix: $breakpoint-prefix,
			$generate-unset: true
		);
	}
}
