///////////////////
// DEFAULT SETTINGS
///////////////////

// Classes
$rr-font-fix-class: 'font-fix' !default;
$rr-font-align-class-prefix: 'txt-' !default;
$rr-font-transform-class-prefix: 'txt-transform-' !default;

// Default text-align properties
$rr-font-align-properties: (
	left,
	right,
	center,
	justify,
	justify-all
) !default;

// Default text-transform properties
$rr-font-transform-properties: (
	none,
	capitalize,
	uppercase,
	lowercase
) !default;

// Outout handling
$rr-generate-font-fix: $rr-generate-classes !default;
$rr-generate-font-align: $rr-generate-classes !default;
$rr-generate-font-transform: $rr-generate-classes !default;

///////////////////
// CLASS PROPERTIES
///////////////////

$rr-font-reset-class-properties: (
	font-smooth: always,
	font-smoothing: antialiased,
	-webkit-font-smoothing: antialiased,
	-moz-font-smoothing: antialiased,
	-moz-osx-font-smoothing: grayscale
) !default;

/////////
// MIXINS
/////////

@mixin font-fix() {
	@include generate-properties($rr-font-reset-class-properties);
}

/////////
// OUTPUT
/////////

@mixin generate-typo-helpers-output($breakpoint-prefix: '', $breakpoint-name: '') {
	// Font fix
	@if $rr-generate-font-fix and $breakpoint-prefix == '' {
		.#{$rr-font-fix-class} {
			@include generate-properties($rr-font-reset-class-properties);
		}
	}

	// Text align
	@if $rr-generate-font-align {
		@include generate-output-by-property(
			$property: 'text-align',
			$values: $rr-font-align-properties,
			$prefix: $rr-font-align-class-prefix,
			$breakpoint-prefix: $breakpoint-prefix,
			$generate-unset: true
		);
	}

	// Text transform
	@if $rr-generate-font-transform {
		@include generate-output-by-property(
			$property: 'text-transform',
			$values: $rr-font-transform-properties,
			$prefix: $rr-font-transform-class-prefix,
			$breakpoint-prefix: $breakpoint-prefix,
			$generate-unset: true
		);
	}
}
